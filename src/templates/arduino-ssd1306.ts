import { IAnimationParams } from '../animation';

export function arduino_ssd1306(animationParams: IAnimationParams) {
  const cx = Math.floor((128 - animationParams.width) / 2);
  const cy = Math.floor((64 - animationParams.height) / 2);

  return `
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_I2C_ADDR 0x3D // or 0x3C
#define SCREEN_WIDTH 128     // OLED display width, in pixels
#define SCREEN_HEIGHT 64     // OLED display height, in pixels
#define OLED_RST_PIN -1      // Reset pin (-1 if not available)

Adafruit_SSD1306 display(128, 64, &Wire, OLED_RST_PIN);

// OLED Animation: ${animationParams.name}
// Code auto-generated by https://wokwi.com/animator, graphics by icons8.com

#define FRAME_DELAY (${animationParams.delay})
#define FRAME_WIDTH (${animationParams.width})
#define FRAME_HEIGHT (${animationParams.height})
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))
const byte PROGMEM frames[][${animationParams.frames[0].length}] = {
  {${animationParams.frames.map((frame) => frame.join(',')).join('},\n  {')}}
};

void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, SCREEN_I2C_ADDR);
}

int frame = 0;
void loop() {
  display.clearDisplay();
  display.drawBitmap(${cx}, ${cy}, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
  display.display();
  frame = (frame + 1) % FRAME_COUNT;
  delay(FRAME_DELAY);
}`.trim();
}
